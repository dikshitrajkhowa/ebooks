start locator --name=locator1
------------------------------------------
GemFire Process		Associated JAR Files
------------------------------------------
gfsh				gfsh-dependencies.jar
server				server-dependencies.jar
					Note: Use this library for all standalone or embedded GemFire processes (including Java clients) that host cache data.
locator				locator-dependencies.jar
Pulse				pulse-dependencies.jar



Linux
 tar -xvf gemfire-1.0.0.0-SNAPSHOT.tar -C path_to_product
 
 UNIX and Linux (Bourne and Korn shells - sh, ksh, bash)
	JAVA_HOME=/usr/java/jdk1.7.0_75
	export JAVA_HOME
	
	GEMFIRE=path_to_product
	export GEMFIRE
	
	GF_JAVA=$JAVA_HOME/bin/java
	export GF_JAVA  
	
	
	/usr/java/jdk1.7.0_67-cloudera
	
	PATH=$PATH:$JAVA_HOME/bin:path_to_product/bin
export PATH
======================================================
gfsh

start locator --name=locator1

start pulse 
admin/admin

start server --name=server1

start server --name=server1  --J=-Dgemfire.start-rest-api=true \
--J=-Dgemfire.http-service-bind-address=localhost --J=-Dgemfire.http-service-port=8080

create region --name=hello --type=REPLICATE
list regions

(to get the port numbers , simply use ps -ef|grep gemfire)

describe connection

List the members of your cluster. 
list members

describe region --name=hello
describe member --name=locator1
Retrieve data. 
	get --key=('123') --region=hello

remove --region=/hello --all	
	
Manipulate data in the region and demonstrate persistence.
-------------------
put --region=hello --key="1" --value="one"
.
.
.

query --query="select  * from /hello limit 10"
query --query="select  * from /hello r1 where r1.id='10'"
query --query="select key, value from /hello.entrySet"

stop server --name=server1

To shut down your cluster, do the following:
shutdown --include-locators=true